---
import type { ToolFromView } from '../../types';
import { Icon } from 'astro-icon/components';

export interface Props {
  tool: ToolFromView;
  tagColorsMap?: Record<string, string>;
}

const { tool, tagColorsMap = {} } = Astro.props;

// Función renderStars modificada para usar arrays simples, no JSX
function renderStars(rating: number | null): { name: string, class: string }[] {
  if (rating === null || rating < 0 || rating > 5) return [];

  const fullStars = Math.floor(rating);
  const halfStar = (rating % 1 >= 0.25 && rating % 1 < 0.75) ? 1 : 0;
  const emptyStars = 5 - fullStars - halfStar;

  const stars = [];
  for(let i=0; i<fullStars; i++) stars.push({ name: "mdi:star", class: "star-icon filled" });
  if(halfStar) stars.push({ name: "mdi:star-half-full", class: "star-icon half" });
  for(let i=0; i<emptyStars; i++) stars.push({ name: "mdi:star-outline", class: "star-icon empty" });

  return stars;
}

// Variables
const displayCategory = tool.category_name || 'Uncategorized';
const displaySubcategory = tool.subcategory_name || '';
const starsArray = renderStars(tool.tool_rating);
const displayPricing = tool.tool_pricing_model || '';
const displayTags = tool.tag_names || [];

// Función auxiliar para obtener el color del tag
function getTagColor(tagName: string): string {
    return tagColorsMap[tagName] || '#e9ecef';
}
---

<article class="tool-card">
  <div class="card-main-content">
     <h3 class="tool-name">
       <a href={tool.tool_link || '#'} target="_blank" rel="noopener noreferrer">{tool.tool_name}</a>
     </h3>
    <div class="tool-categories">
      <span class="tool-category">{displayCategory}</span>
      {displaySubcategory && <span class="tool-subcategory"> / {displaySubcategory}</span>}
    </div>

    <!-- Descripción -->
    <p class="tool-description">{tool.tool_description || 'No description available.'}</p>
  </div>

  <div class="card-footer">
    <!-- Rating y Pricing -->
    <div class="tool-meta">
      {displayPricing && <span class="tool-pricing">{displayPricing}</span>}
      {tool.tool_rating !== null && (
          <span class="tool-rating inline-flex" title={`${tool.tool_rating}/5`}>
              {starsArray.map(star => (
                <Icon name={star.name} class={star.class} />
              ))}
          </span>
      )}
    </div>

    <!-- Tags -->
    {displayTags.length > 0 && (
      <div class="tool-tags">
        {displayTags.map(tagName => (
          <span
            class="tool-tag"
            style={`background-color: ${getTagColor(tagName)};`}
          >
            {tagName}
          </span>
        ))}
      </div>
    )}
  </div>
</article>
<style>
  /* ... tus estilos para .tool-card, .tool-name, etc. ... */
  .tool-card {
    background-color: #ffffff;
    border-radius: 10px;
    box-shadow: 0 4px 12px rgba(0, 30, 60, 0.06);
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    border: 1px solid #eee;
  }
  .tool-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 6px 16px rgba(0, 40, 80, 0.09);
  }
  .card-main-content { margin-bottom: 1rem; }
  .card-footer { margin-top: auto; padding-top: 1rem; border-top: 1px solid #f0f0f0; }
  .tool-name { font-size: 1.25rem; font-weight: 600; margin-top: 0; margin-bottom: 0.5rem; color: var(--text-dark); }
  .tool-name a { text-decoration: none; color: inherit; transition: color 0.2s; }
  .tool-name a:hover { color: var(--primary-color); }
  .tool-categories { font-size: 0.8rem; color: var(--text-light); margin-bottom: 1rem; text-transform: uppercase; letter-spacing: 0.5px; font-weight: 500; }
  .tool-category { color: var(--primary-color); font-weight: 600;}
  .tool-subcategory { margin-left: 0.25rem; }
  .tool-description { font-size: 0.95rem; color: var(--text-medium); line-height: 1.6; flex-grow: 1; margin-bottom: 0; }
  .card-footer { margin-top: auto; padding-top: 1rem; border-top: 1px solid #f0f0f0; }
  .tool-meta {
    display: flex; /* <<< HABILITA FLEXBOX */
    justify-content: space-between; /* <<< EMPUJA ELEMENTOS A LOS EXTREMOS */
    align-items: center; /* Centra verticalmente */
    gap: 0.5rem; /* Espacio si están juntos */
    font-size: 0.9rem;
    color: #666;
    margin-bottom: 0.75rem; /* Espacio antes de tags */
  }
  .tool-rating { color: #f5c518; font-size: 1.3rem; letter-spacing: 0.05em; }
  .tool-pricing { font-weight: 500; color: #333; }
  .meta-separator { color: #ccc; }
  .tool-tags { display: flex; flex-wrap: wrap; gap: 0.5rem; }
  .tool-tag { display: inline-block; padding: 0.3rem 0.7rem; border-radius: 12px; font-size: 0.75rem; font-weight: 500; color: #334155; line-height: 1.3; border: 1px solid rgba(0,0,0,0.05); }
  .star-icon {
    display: inline-block; /* O block si prefieres */
    width: 1.1em; /* Ajusta tamaño */
    height: 1.1em;
    vertical-align: middle; /* Alinea con texto */
  }
  .star-icon.filled, .star-icon.half {
    color: #f5c518; /* Color lleno/medio */
  }
  .star-icon.empty {
    color: #d1d5db; /* Color vacío (gris) */
  }

</style>