---
// src/pages/blog/index.astro - VERSIÓN OPTIMIZADA
import { Image } from 'astro:assets'; 
import Layout from '../../layouts/Layout.astro';
import Airtable from 'airtable';

// Tipo para un post de blog procesado
interface BlogPost {
  id: string;
  slug: string;
  data: {
    title: string;
    description: string;
    author: string;
    publishDate: Date;
    category: string;
    tags: string[];
    image: string | null;
  };
}

// Obtener posts desde Airtable
let publishedPosts: BlogPost[] = [];

try {
  // Obtener variables de entorno
  const apiKey = import.meta.env.AIRTABLE_API_KEY;
  const baseId = import.meta.env.AIRTABLE_BASE_ID;
  const tableId = import.meta.env.AIRTABLE_BLOG_TABLE_ID || import.meta.env.AIRTABLE_TABLE_ID;
  
  if (apiKey && baseId && tableId) {
    // Inicializar Airtable y obtener registros
    const base = new Airtable({ apiKey }).base(baseId);
    const records = await base(tableId).select().all();
    
    // Filtrar posts publicados
    const publishedRecords = records.filter(record => {
      if (record.fields.Status && typeof record.fields.Status === 'string') {
        return record.fields.Status.toLowerCase() === 'published';
      }
      return true;
    });
    
    // Convertir a formato BlogPost
    publishedPosts = publishedRecords.map(record => {
      // Helper para obtener valores string
      const getStringValue = (field: string): string => {
        const value = record.fields[field];
        return value ? String(value) : '';
      };
      
      // Fecha de publicación
      let publishDate = new Date();
      
      // Procesar imágenes
      let imageUrl: string | null = null;
      if (record.fields.Image && Array.isArray(record.fields.Image) && 
          record.fields.Image.length > 0 && typeof record.fields.Image[0] === 'object' &&
          record.fields.Image[0] !== null && 'url' in record.fields.Image[0]) {
        imageUrl = record.fields.Image[0].url;
      }
      
      // Procesar tags
      const tags: string[] = [];
      if (record.fields.Tags && Array.isArray(record.fields.Tags)) {
        record.fields.Tags.forEach((tag: any) => {
          if (typeof tag === 'string') tags.push(tag);
        });
      }
      
      return {
        id: record.id,
        slug: getStringValue('Slug') || record.id,
        data: {
          title: getStringValue('Title') || 'Sin título',
          description: getStringValue('Description') || '',
          author: getStringValue('Author') || 'AutomationAI Team',
          publishDate: publishDate,
          category: getStringValue('Category') || 'General',
          tags: tags,
          image: imageUrl
        }
      };
    });
  }
} catch (error) {
  // Silenciar errores en producción
}

// Helper para formatear fechas
function formatDate(date: Date): string {
  return date.toLocaleDateString('es-ES', { 
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  });
}
---

<Layout title="AutomationAI Blog | Insights & Tutorials" description="Explore the latest insights, tutorials, and success stories from AutomationAI Solutions on AI, automation, and business growth.">

  {/* --- Encabezado de la Página del Blog --- */}
  <section class="blog-hero section-padding bg-soft-gradient text-center">
    <div class="container">
      <h1 class="page-title">AutomationAI Insights</h1>
      <p class="page-subtitle">
        Your source for practical AI knowledge, automation tips, and business growth strategies.
      </p>
    </div>
  </section>

  {/* --- Listado de Posts --- */}
  <section class="blog-list-section section-padding">
    <div class="container">
      {publishedPosts.length > 0 ? (
        <div class="posts-grid">
          {publishedPosts.map(post => {
            const finalUrl = `/blog/${post.slug}/`;
            return (
              <article class="post-card">
                {/* Imagen Destacada (si existe) */}
                {post.data.image ? (
                  <a href={finalUrl} class="card-image-link">
                    <img
                      src={post.data.image}
                      alt={post.data.title || 'Blog post image'}
                      class="card-image"
                      loading="lazy"
                      decoding="async"
                    />
                  </a>
                ) : (
                  <div class="card-image-placeholder"></div>
                )}

                <div class="card-content">
                  {/* Categoría */}
                  <a href={`/blog/category/${post.data.category.toLowerCase()}/`} class="card-category">
                    {post.data.category}
                  </a>

                  {/* Título */}
                  <h2 class="card-title">
                    <a href={finalUrl}>{post.data.title}</a>
                  </h2>

                  {/* Extracto / Descripción */}
                  <p class="card-excerpt">{post.data.description}</p>

                  {/* Meta Info (Autor y Fecha) */}
                  <div class="card-meta">
                    <span class="card-author">By {post.data.author}</span>
                    <span class="card-separator">|</span>
                    <time datetime={post.data.publishDate.toISOString()} class="card-date">
                      {formatDate(post.data.publishDate)}
                    </time>
                  </div>

                  {/* Tags (si existen) */}
                  {post.data.tags && post.data.tags.length > 0 && (
                    <div class="card-tags">
                      {post.data.tags.map((tag: string) => (
                        <a href={`/blog/tag/${tag.toLowerCase().replace(/\s+/g, '-')}/`} class="card-tag">
                          #{tag}
                        </a>
                      ))}
                    </div>
                  )}
                </div>
              </article>
            );
          })}
        </div>
      ) : (
        <div class="no-posts-message">
          <h2>No posts found</h2>
          <p>Check back soon for new content or verify your Airtable connection.</p>
        </div>
      )}
    </div>
  </section>

</Layout>

<style>
  /* --- Estilos Hero del Blog --- */
  .blog-hero {
    background: linear-gradient(180deg, var(--soft-gradient-start, #f8faff) 0%, var(--soft-gradient-end, #ffffff) 100%);
    padding: 4rem 0 3rem;
    margin-bottom: 2rem;
  }
  
  /* Contenedor para centrar contenido */
  .container {
    width: 90%;
    max-width: 1200px;
    margin: 0 auto;
    box-sizing: border-box;
  }
  
  .section-padding {
    padding: 3rem 0;
  }
  
  .page-title {
    font-size: clamp(2.8rem, 7vw, 4rem);
    margin-bottom: 1rem;
    color: var(--text-dark, #1A2B48);
    font-weight: 700;
    text-align: center;
  }
  .page-subtitle {
    font-size: clamp(1.1rem, 3vw, 1.3rem);
    color: var(--text-medium, #4A5568);
    max-width: 650px;
    margin: 0 auto;
    line-height: 1.6;
    text-align: center;
  }

  /* --- Estilos Listado de Posts --- */
  .blog-list-section {
    background-color: var(--bg-light-gray, #f8f9fa);
    padding: 4rem 0;
  }

  .posts-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2.5rem;
    margin: 0 auto;
  }

  @media (min-width: 640px) {
    .posts-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (min-width: 1024px) {
    .posts-grid {
      grid-template-columns: repeat(3, 1fr);
      gap: 2rem;
    }
  }

  /* --- Mensaje de No Posts --- */
  .no-posts-message {
    text-align: center;
    padding: 3rem 2rem;
    background-color: var(--white, #ffffff);
    border-radius: 12px;
    box-shadow: 0 4px 15px rgba(0, 50, 100, 0.05);
    width: 100%;
    max-width: 800px;
    margin: 0 auto;
  }
  .no-posts-message h2 {
    font-size: 1.8rem;
    color: var(--text-dark, #1A2B48);
    margin-bottom: 1rem;
  }
  .no-posts-message p {
    color: var(--text-medium, #4A5568);
    max-width: 500px;
    margin: 0 auto 1.5rem;
  }

  /* --- Estilos Tarjeta de Post --- */
  .post-card {
    background-color: var(--white, #ffffff);
    border-radius: 12px;
    box-shadow: 0 4px 15px rgba(0, 50, 100, 0.05);
    overflow: hidden;
    display: flex;
    flex-direction: column;
    transition: transform 0.2s ease-out, box-shadow 0.2s ease-out;
  }
  .post-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0, 60, 120, 0.1);
  }

  .card-image-link { display: block; }
  .card-image {
    display: block;
    width: 100%;
    height: 200px;
    object-fit: cover;
    border-bottom: 1px solid var(--border-color-soft, #e2e8f0);
  }
  .card-image-placeholder {
      height: 10px;
      background-color: var(--primary-color, #007bff);
  }

  .card-content {
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    flex-grow: 1;
  }

  .card-category {
    display: inline-block;

    font-size: 0.8rem;
    font-weight: 600;
    color: var(--primary-color, #1920ff);
    text-transform: uppercase;
    letter-spacing: 0.5px;
    text-decoration: none;
  }
  .card-category:hover {
    text-decoration: underline;
  }

  .card-title {
    font-size: 1.3rem;
    font-weight: 600;
    color: var(--text-dark, #1A2B48);
    margin-bottom: 0.75rem;
    line-height: 1.4;
  }
  .card-title a {
    text-decoration: none;
    color: inherit;
  }
  .card-title a:hover {
    color: var(--primary-color, #1920ff);
  }

  .card-excerpt {
    font-size: 0.95rem;
    color: var(--text-medium, #4A5568);
    line-height: 1.6;
    margin-bottom: 1.5rem;
    flex-grow: 1;
  }

  .card-meta {
    font-size: 0.85rem;
    color: var(--text-light, #6c757d);
    margin-bottom: 0.75rem;
    border-top: 1px solid var(--border-color-soft, #e2e8f0);
    padding-top: 0.75rem;
    margin-top: auto;
  }
  .card-separator { margin: 0 0.5em; }

  .card-tags {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
      padding-top: 0.5rem;
      border-top: 1px solid var(--border-color-soft, #e2e8f0);
  }
   .card-meta + .card-tags {
      border-top: none;
      padding-top: 0;
   }

  .card-tag {
    display: inline-block;
    background-color: var(--bg-light-gray, #f8f9fa);
    color: var(--text-light, #6c757d);
    padding: 0.2rem 0.6rem;
    border-radius: 4px;
    font-size: 0.75rem;
    font-weight: 500;
    text-decoration: none;
    transition: background-color 0.2s ease, color 0.2s ease;
  }
  .card-tag:hover {
    background-color: var(--primary-color, #007bff);
    color: var(--white, #ffffff);
  }
</style>