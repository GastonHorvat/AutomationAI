---
// src/pages/tools.astro - VERSIÓN COMPONENTIZADA
// Quita las definiciones locales de TagInfo y GroupedTools
import Layout from '../layouts/Layout.astro';
//import ToolFilters from '../components/toolsSection/ToolFilters.astro'; // Ruta corregida
import NewToolFilters from '../components/toolsSection/NewToolFilters.astro'; // Nueva importación
import ToolCategorySection from '../components/toolsSection/ToolCategorySection.astro'; // Ruta corregida
import ToolsHero from '../components/toolsSection/ToolsHero.astro'; // Nueva importación
import { supabase } from '../lib/supabase';
// Importa tipos desde el archivo central
import type { ToolFromView, TagInfo, GroupedTools } from '../types';

console.log("--- Iniciando build de /tools.astro (Componentizado) ---");

// --- Inicialización ---
let tools: ToolFromView[] = [];
let fetchError: string | null = null;
let uniqueTags: string[] = [];
let categories: string[] = []; // Nombres de categorías
let groupedTools: GroupedTools = {};
let tagsWithColors: TagInfo[] = []; // Para el componente de filtros
let tagColorMap: Record<string, string> = {};

const tagColors: string[] = ['#BA68C8','#F0F4C3','#FBE9E7','#A7FFEB','#FFD54F','#ECEFF1','#FF8A65','#90A4AE','#FFF8E1','#DCEDC8','#FFF3E0','#4DB6AC','#FFD180','#FFAB91','#CE93D8','#E8EAF6','#F4FF81','#FF80AB','#F5F5F5','#F3E5F5','#F44336','#FFF176','#F1F8E9','#E1F5FE','#4FC3F7','#F8BBD0','#FFF9C4','#F9FBE7','#E3F2FD','#84FFFF','#64B5F6','#B9F6CA','#DCE775','#B2DFDB','#F06292','#FFECB3','#8C9EFF','#F48FB1','#E0F7FA','#FAFAFA','#F0F4C3','#FFFDE7','#E6EE9C','#FFB74D','#9575CD','#B3E5FC','#E1BEE7','#81C784','#D1C4E9','#FFCCBC','#D7CCC8','#FCE4EC','#FFCDD2','#CFD8DC','#AED581','#4DB6AC','#A1887F','#FBE9E7','#EA80FC','#FFE0B2','#FF9E80','#FFCDD2','#F5F5F5','#E0E0E0','#EDE7F6','#4DD0E1','#DCEDC8','#FF8A80','#E0F7FA','#7986CB','#81D4FA','#EDEDFA','#82B1FF','#B388FF','#AEEDC8','#E0E0E0']

// --- Fetch y Procesamiento ---
if (!supabase) { /* ... */ } else {
  try {
    const { data, error } = await supabase
      .from('tools_view')
      .select('*')
      .order('category_name', { ascending: true, nullsFirst: false })
      .order('tool_name', { ascending: true });

    if (error) throw error;

    if (data) {
      tools = data as ToolFromView[];
      // ... (lógica para extraer uniqueTags y categories igual que antes) ...
      const allTags = tools.flatMap(tool => tool.tag_names || []).filter(tag => tag);
      uniqueTags = [...new Set(allTags)].sort((a, b) => a.localeCompare(b));
      const categoryNames = tools.map(tool => tool.category_name || 'Uncategorized').filter((v, i, a) => a.indexOf(v) === i);
      categories = categoryNames.sort((a, b) => a.localeCompare(b));

      // Crear tagsWithColors para pasar al componente
      const tempTagColorMap: Record<string, string> = {};
        tagsWithColors = uniqueTags.map((tag, index) => {
        const color = tagColors[index % tagColors.length];
        tagColorMap[tag] = color; // <<< --- Rellenamos el tagColorMap aquí
        return { name: tag, color: color };
      });

      // Agrupar (igual que antes)
      groupedTools = tools.reduce((acc, tool) => {
        const category = tool.category_name || 'Uncategorized';
        if (!acc[category]) acc[category] = [];
        acc[category].push(tool);
        return acc;
      }, {} as GroupedTools);
    }
  } catch (error: any) { /* ... */ }
}
// --- Fin Fetch y Procesamiento ---
---

<Layout title="AI Tools Directory | AutomationAI Solutions" description="...">
  <div class="content-container">
    {/* --- USA EL NUEVO COMPONENTE HERO --- */}
    <ToolsHero toolCount={tools.length} />

    {/* --- USAR COMPONENTE DE FILTROS --- */}
    <NewToolFilters
    toolCount={tools.length}
    categories={categories} 
    />

    {/* Mensaje de Error */}
    {fetchError && ( <div class="error-message">...</div> )}

    {/* --- USAR COMPONENTE DE SECCIÓN DE CATEGORÍA --- */}
    {!fetchError && categories.length > 0 ? (
      <div class="categories-container">
        {/* Iteramos sobre las categorías y usamos el componente */}
        {categories.map(category => (
          <ToolCategorySection
            categoryName={category}
            tools={groupedTools[category] || []}
            tagColorsMap={tagColorMap} 
          />
        ))}
        {/* Mensaje "No results" (podría ir dentro o fuera del container) */}
        <p id="no-results-message" class="no-results" hidden>...</p>
      </div>
    ) : !fetchError ? (
      <div class="no-posts-message">...</div>
     ) : null}

  </div>
</Layout>

{/* El script de filtros sigue siendo necesario */}
<script>
  import "../scripts/tools-filters.js";
</script>

{/* Estilos generales que NO se movieron a los componentes */}
<style>
  .content-container { width: 90%; max-width: 1400px; margin: 2rem auto; }
  h1 { /* ... */ }
  .intro-text { /* ... */ }
  .error-message { /* ... */ }
  .categories-container { padding-top: 1rem; }
  .no-results { /* ... */ }
  .no-posts-message { /* ... */ }
  /* ¡ASEGÚRATE DE QUITAR LOS ESTILOS QUE YA MOVIISTE A LOS COMPONENTES! */
</style>